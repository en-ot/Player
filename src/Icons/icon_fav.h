//------------------------------------------------------------------------------
// File Generated by image2c
//------------------------------------------------------------------------------
// Generated from   : icon_fav.png
// Dimensions       : 28x28 pixels
// Bits Per Pixel   : 16 Bits
// Memory Size      : 1568 Bytes
// Little Endian    : true uint16_t
//------------------------------------------------------------------------------

// For details on how to generate this file please refer to
// https://github.com/ImpulseAdventure/GUIslice/wiki/Display-Images-from-FLASH

#include "GUIslice.h"
#include "GUIslice_config.h"

#if (GSLC_USE_PROGMEM)
  #if defined(__AVR__)
    #include <avr/pgmspace.h>
  #else
    #include <pgmspace.h>
  #endif
#endif

const unsigned short icon_fav[784+2] GSLC_PMEM = {
28, // Height of image
28, // Width of image
0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300,     // 0x0010 (16) pixels
0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300,     // 0x0020 (32) pixels
0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0xC3A1, 0xBB81, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300,     // 0x0030 (48) pixels
0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300,     // 0x0040 (64) pixels
0x0300, 0x0300, 0x0300, 0x0300, 0x5B40, 0xF400, 0xF3E0, 0x4B40, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300,     // 0x0050 (80) pixels
0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300,     // 0x0060 (96) pixels
0xCBA0, 0xF5A4, 0xF563, 0xC3A0, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300,     // 0x0070 (112) pixels
0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x5340, 0xF400, 0xFF87, 0xFF47, 0xF3E0,     // 0x0080 (128) pixels
0x4B40, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300,     // 0x0090 (144) pixels
0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0xCBA0, 0xF5A4, 0xFFC8, 0xFFE8, 0xF563, 0xC3A1, 0x0300, 0x0300, 0x0300,     // 0x00A0 (160) pixels
0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300,     // 0x00B0 (176) pixels
0x0300, 0x0300, 0x5340, 0xF3E0, 0xFF67, 0xFFE7, 0xFFE7, 0xFF47, 0xF3E0, 0x4340, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300,     // 0x00C0 (192) pixels
0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0xC3A0, 0xF563,     // 0x00D0 (208) pixels
0xFFC7, 0xFFC7, 0xFFC7, 0xFFA7, 0xF523, 0xBBA1, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300,     // 0x00E0 (224) pixels
0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x4B40, 0xF3E0, 0xFF67, 0xFFC7, 0xFFC7, 0xFFA7, 0xFF87,     // 0x00F0 (240) pixels
0xFEC6, 0xF3C0, 0x4340, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x1B20,     // 0x0100 (256) pixels
0x3B40, 0x6340, 0x8360, 0xAB81, 0xCBA1, 0xF3C0, 0xF563, 0xFFC7, 0xFFA7, 0xFF87, 0xFF67, 0xFF47, 0xFF47, 0xF502, 0xEBC0, 0xCBA0,     // 0x0110 (272) pixels
0xABA0, 0x8B80, 0x6B60, 0x4340, 0x2320, 0x0300, 0x0300, 0x0300, 0x4B40, 0xC3A0, 0xE3C0, 0xF3C0, 0xF3C0, 0xF441, 0xF4C2, 0xF563,     // 0x0120 (288) pixels
0xF604, 0xF685, 0xFF87, 0xFFA7, 0xFF87, 0xFF67, 0xFF47, 0xFF26, 0xFF06, 0xFEC6, 0xF5E5, 0xF564, 0xF502, 0xF482, 0xF421, 0xF3E0,     // 0x0130 (304) pixels
0xF3C0, 0xEBC0, 0xD3A1, 0x4B40, 0x7B61, 0xF3C0, 0xF5C4, 0xFF06, 0xFFA7, 0xFFC8, 0xFFC7, 0xFFC7, 0xFFC7, 0xFFC7, 0xFFA7, 0xFF87,     // 0x0140 (320) pixels
0xFF67, 0xFF47, 0xFF27, 0xFF06, 0xFEE6, 0xFEC6, 0xFEA6, 0xFE86, 0xFE66, 0xFE46, 0xFE26, 0xFDE6, 0xFDA5, 0xF4C2, 0xF3C0, 0x7360,     // 0x0150 (336) pixels
0x0300, 0x9B81, 0xF400, 0xFEE6, 0xFFE7, 0xFFE7, 0xFFE7, 0xFFC7, 0xFFA7, 0xFF87, 0xFF67, 0xFF47, 0xFF27, 0xFF06, 0xFEE6, 0xFEE6,     // 0x0160 (352) pixels
0xFEC6, 0xFE86, 0xFE66, 0xFE46, 0xFE26, 0xFE05, 0xFE05, 0xFDE5, 0xFD44, 0xF3E0, 0x9360, 0x0300, 0x0300, 0x0300, 0x9381, 0xF400,     // 0x0170 (368) pixels
0xF6E6, 0xFFE7, 0xFFC7, 0xFFA7, 0xFF87, 0xFF67, 0xFF47, 0xFF27, 0xFF06, 0xFEE6, 0xFEC6, 0xFEA6, 0xFE86, 0xFE66, 0xFE46, 0xFE26,     // 0x0180 (384) pixels
0xFE05, 0xFDE5, 0xFDC5, 0xFD24, 0xF3E0, 0x8B81, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x9381, 0xF400, 0xF6C6, 0xFFA7, 0xFF67,     // 0x0190 (400) pixels
0xFF67, 0xFF27, 0xFF06, 0xFF06, 0xFEE6, 0xFEC6, 0xFEA6, 0xFE86, 0xFE66, 0xFE46, 0xFE26, 0xFE06, 0xFDE5, 0xFDC5, 0xFD24, 0xF3C0,     // 0x01A0 (416) pixels
0x8B81, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x8B61, 0xF400, 0xFE65, 0xFF47, 0xFF27, 0xFF06, 0xFEE6, 0xFEC6,     // 0x01B0 (432) pixels
0xFEA6, 0xFE86, 0xFE66, 0xFE46, 0xFE26, 0xFE05, 0xFDE6, 0xFDC5, 0xFDA5, 0xFD03, 0xF3E0, 0x8B61, 0x0300, 0x0300, 0x0300, 0x0300,     // 0x01C0 (448) pixels
0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x8361, 0xF3E0, 0xF625, 0xFF07, 0xFEE6, 0xFEC6, 0xFEA6, 0xFE86, 0xFE66, 0xFE46, 0xFE26,     // 0x01D0 (464) pixels
0xFE05, 0xFDE5, 0xFDC5, 0xFDA5, 0xFD03, 0xF3C0, 0x8360, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300,     // 0x01E0 (480) pixels
0x0300, 0x0300, 0x8B81, 0xF400, 0xFEE6, 0xFEC6, 0xFEA6, 0xFE86, 0xFE66, 0xFE46, 0xFE06, 0xFE05, 0xFDE5, 0xFDC5, 0xFD85, 0xFD65,     // 0x01F0 (496) pixels
0xF3E0, 0x8B80, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x7360, 0xF461,     // 0x0200 (512) pixels
0xFEA6, 0xFE86, 0xFE66, 0xFE46, 0xFE26, 0xFE06, 0xFDE6, 0xFDC5, 0xFDA5, 0xFD85, 0xFD65, 0xFD45, 0xF401, 0x7360, 0x0300, 0x0300,     // 0x0210 (528) pixels
0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0xA380, 0xF4C2, 0xFE86, 0xFE66, 0xFE46, 0xFE26,     // 0x0220 (544) pixels
0xFE05, 0xFDE5, 0xFDC5, 0xFDA5, 0xFD85, 0xFD65, 0xFD45, 0xFD45, 0xF441, 0x9B81, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300,     // 0x0230 (560) pixels
0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0xCBA0, 0xF543, 0xFE66, 0xFE46, 0xFE05, 0xFDE5, 0xFDC5, 0xFDA5, 0xFD85, 0xFD65,     // 0x0240 (576) pixels
0xFD45, 0xFD45, 0xFD25, 0xFD45, 0xF482, 0xC3A0, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300,     // 0x0250 (592) pixels
0x0300, 0x0B00, 0xEBC0, 0xFD84, 0xFE26, 0xFE06, 0xFDE5, 0xFDC5, 0xFDA5, 0xFD44, 0xFD24, 0xFD45, 0xFD25, 0xFD25, 0xFD25, 0xFD45,     // 0x0260 (608) pixels
0xFCC3, 0xEBC0, 0x0B00, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x2B20, 0xF3C0, 0xFDC5,     // 0x0270 (624) pixels
0xFDE5, 0xFDE5, 0xFDC5, 0xFD64, 0xF482, 0xF3C0, 0xF3C0, 0xF461, 0xFD04, 0xFD25, 0xFD25, 0xFD25, 0xFD04, 0xF3C0, 0x2B20, 0x0300,     // 0x0280 (640) pixels
0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x5340, 0xF3E0, 0xFDE5, 0xFDC5, 0xFD85, 0xF482, 0xF3C0,     // 0x0290 (656) pixels
0xC3A0, 0x4340, 0x4340, 0xC3A0, 0xF3E0, 0xF462, 0xFD04, 0xFD25, 0xFD25, 0xF3E0, 0x5340, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300,     // 0x02A0 (672) pixels
0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x7B60, 0xF441, 0xFDA5, 0xF4C2, 0xF3E0, 0xCBA0, 0x5340, 0x0300, 0x0300, 0x0300, 0x0300,     // 0x02B0 (688) pixels
0x4B40, 0xCBA0, 0xF3E0, 0xF482, 0xFD24, 0xF401, 0x7B60, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300,     // 0x02C0 (704) pixels
0x0300, 0xAB80, 0xF400, 0xF3E0, 0xD3A0, 0x5B40, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x5B40, 0xD3A0,     // 0x02D0 (720) pixels
0xF3E0, 0xF3E0, 0xAB80, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x9381, 0xDBC0, 0x6B60,     // 0x02E0 (736) pixels
0x0B00, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x6360, 0xD3A0, 0x8361, 0x0300,     // 0x02F0 (752) pixels
0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300,     // 0x0300 (768) pixels
0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300, 0x0300,     // 0x0310 (784) pixels
};
